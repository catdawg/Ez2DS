{"name":"Ez2ds","body":"Are you developing a 2D game and just reached the part of development where you need to make a lot of levels? Need to easily place and update positions of your waypoints/obstacles/powerups/triggers? Don't really have resources to develop a map editor?\r\n\r\nTired of asking your designer which size the button is? or bugging him to send you the size for each element in the interface so that you can hardcode it?\r\n\r\nWould like to test out physics scenarios, but don't really fancy creating the scenarios and playing with the physics element parameters in code?\r\n\r\nMaybe this library can help you!\r\n\r\n#####EZ2DS\r\n\r\n\r\nEasy 2D Scene (Ez2DS), is a library for transforming an SVG file into a 2D scene tree with an API. In essence, the library provides the means for applications to quickly have a 2D editor.\r\n\r\nSVG is used, not with vector graphics in mind, but with the idea of using SVG to organize and tag raster images in a scene. The other supported elements are Paths, Groups and Clones. For example, Paths can be used to define the outline of a given image and Groups can be used for custom tagging and transformation management.\r\n\r\nSince the SVG capabilities are immense, it would be very difficult to support everything, thus this subset is used. As long as this limitation is understood, the library should provide an easy to use solution for many applications in need of an editor.\r\n\r\nSVG was chosen because there are many editors available for this file format, although Inkscape(www.inkscape.org) is recommended because it allows editting the SVG text directly, giving the possibility of adding custom information to elements in the scene. \r\n\r\nThe library was created with programming language wrapping in mind to allow the connection with any Graphical/Physics Engine. The main library is developed in C to hopefully facilitate this wrapping.\r\n\r\nExamples of usage are: \r\n *A 2D map editor for games! Specify the position/appearance of waypoints/triggers/obstacles of your scenarions in Inkscape and then read them easily using this API.\r\n *When a 2D Engine does not have an editor, you can quickly use this library to provide an editor for your 2D interfaces/scenes; \r\n *Creating a 2D Physics Engine scenario by tagging elements to specify physical characteristics. Using the common physics engine concept of Body(element which contains speed, momentum, mass and such) and Geometry(used for collision calculation), we can make the analogy that a Group can be the Body, which has a Path as a child, defining the Geometry of this body, and an Image which gives the physics object a visible appearance.\r\n\r\n#####COMPILE INSTRUCTIONS\r\n\r\nI'm developing this on Windows in Netbeans and MinGW for compiling. Plans are for providing crossplatform compilation capabilities, such as CMake, but for now this will do. In order to compile this you just have to import the project into Netbeans, make sure you have MinGW installed and that the following folders are on the system path: \"...\\MinGW\\msys\\1.0\\bin; ...\\MinGW\\bin;\". \r\n \r\n#####PROJECT STRUCTURE\r\n\r\nEz2DS folder contains the main library. e2dTester contains a sample application which uses the library to draw an SVG file in OpenGL using the API provided by the library.\r\n\r\n#####CURRENT STATUS\r\n\r\nCore functionality is mostly finished, just missing some utility methods, and supporting extra functionality on Paths (only supports straight line segments and simple curves).\r\n\r\nWill very soon start experimenting with wrapping on Python and Java( Android! ).\r\n\r\nWill only be useful for production use when I have some wrappers developed and examples in popular Graphics Engines.\r\n\r\n\r\n\r\n#####LICENSE \r\n\r\nZLIB license (http://en.wikipedia.org/wiki/Zlib_License)\r\n\r\nPlease tell me if you use this on a project, I would be very happy if you did!!\r\n\r\n\r\n","tagline":"Easy 2D Scene (Ez2DS), is a library for transforming an SVG file into a 2D scene tree with an API. In essence, the library provides the means for applications to quickly have a 2D editor (Any SVG editor). ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}